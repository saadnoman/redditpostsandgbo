{"paragraphs":[{"text":"%pyspark\r\nfrom pyspark.sql.types import StructType, StructField, IntegerType, StringType \r\nfrom pyspark.sql.functions import from_unixtime, regexp_replace\r\nfrom pyspark.ml.feature import Tokenizer, StopWordsRemover, NGram\r\nfrom pyspark.sql.functions import explode, udf, avg, sum\r\nfrom pyspark.sql.functions import lower\r\nfrom pyspark.sql.functions import lit\r\n\r\ndata = spark.read.csv(\"s3://msbabana2952020/data.csv\", sep = \"|\", header = True)\r\n\r\n#clean data types\r\ndata = data.withColumn(\"ups_int\", data[\"ups\"].cast(IntegerType()))\r\ndata = data.withColumn(\"downs_int\", data[\"downs\"].cast(IntegerType()))\r\ndata = data.withColumn(\"score_int\", data[\"score\"].cast(IntegerType()))\r\ndata = data.withColumn(\"created_utc\", data[\"created_utc\"].cast(IntegerType()))\r\n\r\n#extract dates\r\ndata = data.withColumn(\"created_date\", from_unixtime(data[\"created_utc\"], \"yyyy-MM-dd HH:mm:ss\"))\r\ndata = data.withColumn(\"created_month\", from_unixtime(data[\"created_utc\"], \"MM\"))\r\ndata = data.withColumn(\"created_day\", from_unixtime(data[\"created_utc\"], \"dd\"))\r\ndata = data.withColumn(\"created_hour\", from_unixtime(data[\"created_utc\"], \"HH\"))\r\ndata = data.withColumn(\"created_dayOfWeek\", from_unixtime(data[\"created_utc\"], \"E\"))\r\n\r\n\r\ndata.createOrReplaceTempView(\"reddit\")\r\ndata.columns\r\n","user":"anonymous","dateUpdated":"2020-06-12T20:22:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['created_utc', 'ups', 'subreddit_id', 'link_id', 'name', 'score_hidden', 'author_flair_css_class', 'author_flair_text', 'subreddit', 'id', 'removal_reason', 'gilded', 'downs', 'archived', 'author', 'score', 'retrieved_on', 'body', 'distinguished', 'edited', 'controversiality', 'parent_id', 'ups_int', 'downs_int', 'score_int', 'created_date', 'created_month', 'created_day', 'created_hour', 'created_dayOfWeek']\n"}]},"apps":[],"jobName":"paragraph_1591988885608_-2024507454","id":"20200612-190805_593090666","dateCreated":"2020-06-12T19:08:05+0000","dateStarted":"2020-06-12T19:15:35+0000","dateFinished":"2020-06-12T19:16:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:172"},{"text":"%pyspark\n\nmov_data = spark.read.csv(\"s3://msbabana2952020/movies_may_2015_gbo.csv\", sep = \",\", header = True)\nmov_data.columns\n","user":"anonymous","dateUpdated":"2020-06-12T19:17:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['Date_str', 'DOW', 'Rank', 'Daily', 'YD', 'LW', 'Theatres', 'Avg', 'ToDate', 'Day', 'Hidden', 'movie_name', 'release_date', 'date']\n"}]},"apps":[],"jobName":"paragraph_1591989335612_1956691231","id":"20200612-191535_930006699","dateCreated":"2020-06-12T19:15:35+0000","dateStarted":"2020-06-12T19:17:27+0000","dateFinished":"2020-06-12T19:17:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:173"},{"text":"%pyspark\n\nmovies_df = spark.sql(\"select * from reddit where subreddit = 'movies'\")\nmovies_df.createOrReplaceTempView(\"movies\")\nsqlContext.cacheTable(\"movies\")\n#376601 rows\n\n","user":"anonymous","dateUpdated":"2020-06-12T19:39:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1591989434456_814634777","id":"20200612-191714_1438863754","dateCreated":"2020-06-12T19:17:14+0000","dateStarted":"2020-06-12T19:18:16+0000","dateFinished":"2020-06-12T19:18:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:174"},{"text":"%pyspark\nmov_names = mov_data.select('movie_name').distinct()\nmov_names = mov_names.withColumn(\"movie_name_lower\", lower(mov_names[\"movie_name\"]))\nmov_names = mov_names.withColumn(\"movie_name_lower_esc\", regexp_replace(\"movie_name_lower\", \"'\", \"''\"))\nmov_names = mov_names.collect()\n\n\n    ","user":"anonymous","dateUpdated":"2020-06-12T21:09:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1591989496230_-53663503","id":"20200612-191816_412949426","dateCreated":"2020-06-12T19:18:16+0000","dateStarted":"2020-06-12T21:09:36+0000","dateFinished":"2020-06-12T21:09:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:175"},{"text":"%pyspark\n\n\nfield = [StructField(\"created_date\",StringType(), True), StructField(\"ups_int\", IntegerType(), True), StructField(\"downs_int\", IntegerType(), True), StructField(\"score_int\", IntegerType(), True), StructField(\"body\", StringType(), True), StructField(\"movie_name\",StringType(), True), StructField(\"bod_esc\", StringType(), True) ]\nschema = StructType(field)\n\nall_posts = spark.createDataFrame(sc.emptyRDD(), schema)\n\n\nfor row in mov_names:\n    mov_posts = spark.sql(\"select created_date, ups_int, downs_int, score_int, body from movies where lower(body) like '%{0}%'\".format(row[\"movie_name_lower_esc\"]))\n    mov_posts = mov_posts.withColumn(\"movie_name\", lit(row[\"movie_name\"]))\n    mov_posts = mov_posts.withColumn(\"body_esc\", regexp_replace(\"body\", \"[^A-Za-z0-9_\\s]\", \"\"));\n    all_posts = all_posts.union(mov_posts)\n\nall_posts = all_posts.drop('body')\n    ","user":"anonymous","dateUpdated":"2020-06-12T22:17:10+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1591990074413_-926033367","id":"20200612-192754_376534536","dateCreated":"2020-06-12T19:27:54+0000","dateStarted":"2020-06-12T22:12:49+0000","dateFinished":"2020-06-12T22:12:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:176"},{"text":"%pyspark\nall_posts.count()","user":"anonymous","dateUpdated":"2020-06-12T21:31:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591992755940_373581658","id":"20200612-201235_1191909741","dateCreated":"2020-06-12T20:12:35+0000","dateStarted":"2020-06-12T21:31:53+0000","dateFinished":"2020-06-12T21:37:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:177","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"12598\n"}]}},{"text":"%pyspark\nall_posts.coalesce(1).write.csv(\"s3://msbabana2952020/movies_may_2015_posts.csv\",  header=\"true\")","user":"anonymous","dateUpdated":"2020-06-12T22:13:02+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591993327013_25664380","id":"20200612-202207_382893753","dateCreated":"2020-06-12T20:22:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:178","dateFinished":"2020-06-12T22:14:33+0000","dateStarted":"2020-06-12T22:13:02+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2020-06-12T21:38:02+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591997882774_-733150929","id":"20200612-213802_964095064","dateCreated":"2020-06-12T21:38:02+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:763"}],"name":"Untitled Note 1","id":"2FB7BB4R1","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}